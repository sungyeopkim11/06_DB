/* 관리자 계정(sys) 접속 후 수행 */

ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;


-- 계정 생성
CREATE USER REPET_KSY IDENTIFIED BY REPET1234;

-- 권한 부여
GRANT CONNECT, RESOURCE TO REPET_KSY;

-- 테이블 저장 공간 할당
ALTER USER REPET_KSY
DEFAULT TABLESPACE USERS
QUOTA 100M ON USERS;

-------------------------------------------------------------
DROP TABLE "MEMBER";

CREATE TABLE "MEMBER" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MEMBER_EMAIL"	VARCHAR2(41)		NOT NULL,
	"MEMBER_PW"	VARCHAR2(150)		NOT NULL,
	"MEMBER_NICKNAME"	VARCHAR2(30)		NOT NULL,
	"MEMBER_ADDRESS"	NVARCHAR2(150)		NOT NULL,
	"PROFILE_IMG"	VARCHAR2(300)		NULL,
	"EROLL_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"MEMBER_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL
);

COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '회원 이메일(ID 겸용)';

COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원 비밀번호(암호화)';

COMMENT ON COLUMN "MEMBER"."MEMBER_NICKNAME" IS '회원명(별명)';

COMMENT ON COLUMN "MEMBER"."MEMBER_ADDRESS" IS '회원 주소';

COMMENT ON COLUMN "MEMBER"."PROFILE_IMG" IS '프로필 이미지 경로';

COMMENT ON COLUMN "MEMBER"."EROLL_DATE" IS '가입일';

COMMENT ON COLUMN "MEMBER"."MEMBER_DEL_FL" IS '탈퇴여부(N,Y)';

DROP TABLE "BOARD";

CREATE TABLE "BOARD" (
	"BOARD_NO"	NUMBER		NOT NULL,
	"BOARD_TITLE"	NVARCHAR2(100)		NOT NULL,
	"BOARD_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"BOARD_WRTIE_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"BOARD_UPDATE_DATE"	DATE		NULL,
	"READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"BOARD_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"BOARD_CODE"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "BOARD"."BOARD_NO" IS '게시글 번호(SEQ_BOARD_NO)';

COMMENT ON COLUMN "BOARD"."BOARD_TITLE" IS '게시글 제목';

COMMENT ON COLUMN "BOARD"."BOARD_CONTENT" IS '게시글 내용';

COMMENT ON COLUMN "BOARD"."BOARD_WRTIE_DATE" IS '게시글 작성일';

COMMENT ON COLUMN "BOARD"."BOARD_UPDATE_DATE" IS '마지막 수정일';

COMMENT ON COLUMN "BOARD"."READ_COUNT" IS '게시글 조회수';

COMMENT ON COLUMN "BOARD"."BOARD_DEL_FL" IS '삭제여부(N,Y)';

COMMENT ON COLUMN "BOARD"."MEMBER_NO" IS '작성자 회원 번호';

COMMENT ON COLUMN "BOARD"."BOARD_CODE" IS '게시판 종류 코드 번호';

DROP TABLE "BOARD_LIKE";

CREATE TABLE "BOARD_LIKE" (
	"BOARD_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "BOARD_LIKE"."BOARD_NO" IS '게시글 번호(SEQ_BOARD_NO)';

COMMENT ON COLUMN "BOARD_LIKE"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

DROP TABLE "COMMENT";

CREATE TABLE "COMMENT" (
	"COMMENT_NO"	NUMBER		NOT NULL,
	"COMMENT_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"COMMENT_WRITE_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"COMMENT_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"PARENT_COMMENT_NO"	NUMBER		NULL
);

COMMENT ON COLUMN "COMMENT"."COMMENT_NO" IS '댓글 번호(SEQ_COMMENT_NO)';

COMMENT ON COLUMN "COMMENT"."COMMENT_CONTENT" IS '댓글 내용';

COMMENT ON COLUMN "COMMENT"."COMMENT_WRITE_DATE" IS '댓글 작성일';

COMMENT ON COLUMN "COMMENT"."COMMENT_DEL_FL" IS '댓글 삭제 여부(N,Y)';

COMMENT ON COLUMN "COMMENT"."BOARD_NO" IS '게시글 번호(SEQ_BOARD_NO)';

COMMENT ON COLUMN "COMMENT"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "COMMENT"."PARENT_COMMENT_NO" IS '부모 댓글 번호(SEQ_COMMENT_NO)';

DROP TABLE "BOARD_TYPE";

CREATE TABLE "BOARD_TYPE" (
	"BOARD_CODE"	NUMBER		NOT NULL,
	"BOARD_NAME"	NVARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN "BOARD_TYPE"."BOARD_CODE" IS '게시판 종류 코드 번호';

COMMENT ON COLUMN "BOARD_TYPE"."BOARD_NAME" IS '게시판 이름';

DROP TABLE "BOARD_IMG";

CREATE TABLE "BOARD_IMG" (
	"IMG_NO"	NUMBER		NOT NULL,
	"IMG_PATH"	VARCHAR2(200)		NOT NULL,
	"IMG_RENAME"	NVARCHAR2(50)		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "BOARD_IMG"."IMG_NO" IS '이미지 번호(SEQ_IMG_NO)';

COMMENT ON COLUMN "BOARD_IMG"."IMG_PATH" IS '이미지 요청 경로';

COMMENT ON COLUMN "BOARD_IMG"."IMG_RENAME" IS '이미지 변경명';

COMMENT ON COLUMN "BOARD_IMG"."BOARD_NO" IS '이미지가 첨부된 게시글 번호';

DROP TABLE "USED_BOARD";

CREATE TABLE "USED_BOARD" (
	"BOARD_NO"	NUMBER		NOT NULL,
	"PRICE"	VARCHAR(255)		NOT NULL
);

COMMENT ON COLUMN "USED_BOARD"."BOARD_NO" IS '게시글 번호(SEQ_BOARD_NO)';

COMMENT ON COLUMN "USED_BOARD"."PRICE" IS '중고거래 금액';

DROP TABLE "CHATTING_ROOM";

CREATE TABLE "CHATTING_ROOM" (
	"CHATROOM_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "CHATTING_ROOM"."CHATROOM_NO" IS '채팅방 번호(SEQ_CHATROOM_NO)';

COMMENT ON COLUMN "CHATTING_ROOM"."BOARD_NO" IS '게시글 번호';

COMMENT ON COLUMN "CHATTING_ROOM"."MEMBER_NO" IS '참여자 회원 번호';

DROP TABLE "CHATTING_MESSAGE";

CREATE TABLE "CHATTING_MESSAGE" (
	"MESSAGE_NO"	NUMBER		NOT NULL,
	"MESSAGE_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"MESSAGE_TIME"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"READ_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"CHAT_ROOM_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "CHATTING_MESSAGE"."MESSAGE_NO" IS '메시지 번호(SEQ_MESSAGE_NO)';

COMMENT ON COLUMN "CHATTING_MESSAGE"."MESSAGE_CONTENT" IS '메시지 내용';

COMMENT ON COLUMN "CHATTING_MESSAGE"."MESSAGE_TIME" IS '메시지 시간';

COMMENT ON COLUMN "CHATTING_MESSAGE"."READ_FL" IS '메시지 읽음 여부(Y/N)';

COMMENT ON COLUMN "CHATTING_MESSAGE"."CHAT_ROOM_NO" IS '채팅방 번호';

DROP TABLE "REPORT_COMMENT";

CREATE TABLE "REPORT_COMMENT" (
	"REPORT_NO"	NUMBER		NOT NULL,
	"REPORT_COMMENT_NO"	NUMBER		NOT NULL,
	"COMMENT_CONTENT"	NVARCHAR2(1000)		NOT NULL,
	"REPORT_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"PROGRESS_CODE"	NUMBER	DEFAULT 1	NOT NULL
);

COMMENT ON COLUMN "REPORT_COMMENT"."REPORT_NO" IS '신고한 회원 번호';

COMMENT ON COLUMN "REPORT_COMMENT"."REPORT_COMMENT_NO" IS '신고 댓글 번호';

COMMENT ON COLUMN "REPORT_COMMENT"."COMMENT_CONTENT" IS '댓글 내용';

COMMENT ON COLUMN "REPORT_COMMENT"."REPORT_DATE" IS '신고일자';

COMMENT ON COLUMN "REPORT_COMMENT"."PROGRESS_CODE" IS '신고 상태 경과 코드';

DROP TABLE "REPORT_BOARD";

CREATE TABLE "REPORT_BOARD" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL,
	"REPORT_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"REPORT_WRTIE_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"PROGRESS_CODE"	NUMBER	DEFAULT 1	NOT NULL,
	"REPORT_CATEGORY"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "REPORT_BOARD"."MEMBER_NO" IS '신고한 회원 번호';

COMMENT ON COLUMN "REPORT_BOARD"."BOARD_NO" IS '게시글 번호';

COMMENT ON COLUMN "REPORT_BOARD"."REPORT_CONTENT" IS '신고 게시글 내용';

COMMENT ON COLUMN "REPORT_BOARD"."REPORT_WRTIE_DATE" IS '신고 일자';

COMMENT ON COLUMN "REPORT_BOARD"."PROGRESS_CODE" IS '신고 상태 경과 코드';

COMMENT ON COLUMN "REPORT_BOARD"."REPORT_CATEGORY" IS '신고 사유 카테고리 선택형';

DROP TABLE "REPORT_PROGRESS";

CREATE TABLE "REPORT_PROGRESS" (
	"STATUS_CODE"	NUMBER		NOT NULL,
	"STATUS_CONTENT"	VARCHAR2(50)		NOT NULL
);

COMMENT ON COLUMN "REPORT_PROGRESS"."STATUS_CODE" IS '상태코드';

COMMENT ON COLUMN "REPORT_PROGRESS"."STATUS_CONTENT" IS '상태경과 상세';

DROP TABLE "NOTIFICATION";

CREATE TABLE "NOTIFICATION" (
	"NOTIFICATION_NO"	NUMBER		NOT NULL,
	"NOTIFICATION_CONTENT"	VARCHAR2(1000)		NOT NULL,
	"NOTIFICATION_CHECK"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"NOTIFICATION_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"NOTIFICATION_URL"	VARCHAR2(1000)		NOT NULL,
	"SEND_MEMBER_NO"	NUMBER		NOT NULL,
	"RECEIVE_MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "NOTIFICATION"."NOTIFICATION_NO" IS '알림 번호(SEQ_NOTIFICATION_NO)';

COMMENT ON COLUMN "NOTIFICATION"."NOTIFICATION_CONTENT" IS '알림 내용(HTML 포함)';

COMMENT ON COLUMN "NOTIFICATION"."NOTIFICATION_CHECK" IS '읽음 여부(Y,N)';

COMMENT ON COLUMN "NOTIFICATION"."NOTIFICATION_DATE" IS '알림 생성 시간';

COMMENT ON COLUMN "NOTIFICATION"."NOTIFICATION_URL" IS '연결 페이지 주소';

COMMENT ON COLUMN "NOTIFICATION"."SEND_MEMBER_NO" IS '알림 보낸 회원 번호';

COMMENT ON COLUMN "NOTIFICATION"."RECEIVE_MEMBER_NO" IS '알림 받는 회원 번호';


----------------------------------------------------------------
/* 시퀀스 번호 생성 */
-- 회원 번호 시퀀스 생성
CREATE SEQUENCE SEQ_MEMBER_NO NOCACHE;

-- 게시글 번호 시퀀스 생성
CREATE SEQUENCE SEQ_BOARD_NO NOCACHE;

-- 이미지 번호 시퀀스 생성
CREATE SEQUENCE SEQ_IMG_NO NOCACHE;

-- 댓글 번호 시퀀스 생성
CREATE SEQUENCE SEQ_COMMENT_NO NOCACHE;

-- 채팅방 번호 시퀀스 생성
CREATE SEQUENCE SEQ_CHATROOM_NO NOCACHE;

-- 채팅 메시지 번호 시퀀스 생성
CREATE SEQUENCE SEQ_MESSAGE_NO NOCACHE;

-- 알림 번호 시퀀스 생성
CREATE SEQUENCE SEQ_NOTIFICATION_NO NOCACHE;

---------------------------------------------------------
------------------------------------------------------------
/* BOARD 테이블 BOARD_DEL_FL CHECK 제약 조건 추가*/
ALTER TABLE "BOARD"
ADD CONSTRAINT "CHK_BOARD_DEL_FL"
CHECK(BOARD_DEL_FL IN ('Y', 'N'));

/* COMMENT 테이블 BOARD_DEL_FL CHECK 제약 조건 추가 */
ALTER TABLE "COMMENT"
ADD CONSTRAINT "CHK_COMMENT_DEL_FL"
CHECK(COMMENT_DEL_FL IN ('Y','N'));

----------------------------------------------------------------
/* BOARD_TYPE 지정 */
INSERT INTO BOARD_TYPE VALUES(1, '병원 정보');
INSERT INTO BOARD_TYPE VALUES(2, '애완 용품');
INSERT INTO BOARD_TYPE VALUES(3, '분양 정보');
INSERT INTO BOARD_TYPE VALUES(4, '자유 게시판');

ROLLBACK;

SELECT * FROM BOARD_TYPE;
COMMIT;
-----------------------------------------------------------------
-- MEMBER 테이블 샘플 데이터 생성
INSERT INTO "MEMBER" 
VALUES(
	SEQ_MEMBER_NO.NEXTVAL, 'member01@naver.com', 'pass01',
	'홍길동', '서울 중구 120', NULL, DEFAULT, DEFAULT 
);
SELECT * FROM "MEMBER";
-----------------------------------------------------------------
/* PL/SQL을 이용해서 BOARD 테이블에 샘플 데이터 삽입 */
BEGIN
		FOR I IN 1..2000 LOOP
			INSERT INTO BOARD
			VALUES(
					SEQ_BOARD_NO.NEXTVAL,
					SEQ_BOARD_NO.CURRVAL || '번 게시글',
					SEQ_BOARD_NO.CURRVAL || '번 게시글 내용',
					DEFAULT, DEFAULT, DEFAULT, DEFAULT,
					1, -- 회원 번호
					CEIL( DBMS_RANDOM.VALUE(0,4) )
			);
		END LOOP;
		
END;

SELECT COUNT(*) FROM BOARD;
COMMIT;

-- 게시판 종류 별로 샘플 데이터 개수 확인
SELECT BOARD_CODE, COUNT(*)
FROM BOARD
GROUP BY BOARD_CODE
ORDER BY BOARD_CODE ASC;
-------------------------------------------------------

/* PL/SQL을 이용해서 COMMENT 테이블에 샘플 데이터 삽입 */
BEGIN
		FOR I IN 1..3000 LOOP
			INSERT INTO "COMMENT"
			VALUES(
					SEQ_COMMENT_NO.NEXTVAL,
					SEQ_COMMENT_NO.CURRVAL || '번째 댓글',
					DEFAULT, DEFAULT,
					CEIL(DBMS_RANDOM.VALUE(0, 1999) ),
					1,
					NULL
			);
		END LOOP;
		
END;

SELECT COUNT(*) FROM "COMMENT";
COMMIT;

-- 게시글 번호별 작성돤 댓글 별 개수 조회
SELECT BOARD_NO, COUNT(*)
FROM "COMMENT"
GROUP BY BOARD_NO
ORDER BY BOARD_NO DESC;

/* 특정 게시판에
 * 삭제되지 않은 게시글 목록 조회
 * 
 * - 조회된 행번호 : ROWNUM 또는 ROW_NUMBER() 이용
 * 	
 *  게시글 번호, 제목, 조회수, 작성일 : BOARD 테이블 컬럼
 * 
 *   작성자 닉네임 : MEMBER 테이블 
 * 
 *   댓글 수 : COMMENT 테이블에서 BOARD_NO 별 댓글 개수 COUNT(*)
 *   좋아요 개수 : BOARD_LIKE 테이블에서 BOARD_NO 별 댓글 개수 COUNT(*)
 * 
 * - 작성일은 몇 초/분/시간 전 또는 YYYY-MM--DD 형식으로 조회
 * 
 * - 가장 최근 글이 제일 처음 조회
 * 	 (시퀀스 번호로 만들어진 BOARD_NO를 이용)
 *  */

-- ROW_NUMBER() OVER (ORDER BY BOARD_NO ASC) AS "RNUM",
--> BOARD_NO 오름차순으로 정렬 후 조회되ㅏㄴ 행의 번호를 지정
--   + 해당 컬럼 별칭을 "RNUM" 지정
-->  연속 되지 않은 PK 대신 연속된 숫자를 만들려고 사용!

-- 상관 서브 쿼리 해석 순서
-- 1) 메인 쿼리 1행 해석
-- 2) 서브 쿼리에서 메인 쿼리 1행 조회 결과를 이용 -> 해석
-- 2) 다시 메인 쿼리 해석

-- DATE 타입 끼리 - 연산 시 결과 == 몇 일 차이(일 단위)

SELECT 
		ROW_NUMBER() OVER (ORDER BY BOARD_NO ASC) AS "RNUM",
		BOARD_NO,
		BOARD_TITLE,
		READ_COUNT,
		MEMBER_NICKNAME,
		(SELECT COUNT(*) FROM "COMMENT" C
		 WHERE C.BOARD_NO = B.BOARD_NO ) AS "COMMENT_COUNT",
		
		(SELECT COUNT(*) FROM BOARD_LIKE L
		 WHERE L.BOARD_NO = B.BOARD_NO) AS "LIKE_COUNT",
		 
		 CASE
		 	WHEN CURRENT_DATE - BOARD_WRITE_DATE < 1 / 24 / 60
		 	THEN FLOOR( (CURRENT_DATE - BOARD_WRITE_DATE)
		 	             * 24 * 60 * 60 ) || '초 전'
		 	             
		 	WHEN CURRENT_DATE - BOARD_WRITE_DATE < 1 / 24
		 	THEN FLOOR( (CURRENT_DATE - BOARD_WRITE_DATE)
		 	             * 24 * 60 ) || '분 전'        
		 	             
     	WHEN CURRENT_DATE - BOARD_WRITE_DATE < 1 
		 	THEN FLOOR( (CURRENT_DATE - BOARD_WRITE_DATE)
		 	             * 24  ) || '시간 전'
		 	             
		 	ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
		 
		 END AS "BOARD_WRITE_DATE"
		 
FROM		"BOARD" B
JOIN "MEMBER" M ON (B.MEMBER_NO = M.MEMBER_NO)
WHERE BOARD_DEL_FL = 'N' -- 삭제 안된 글
AND   BOARD_CODE = 4    -- 게시판 종류
ORDER BY RNUM DESC;





























